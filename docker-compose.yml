version: '3.8'

services:
  # üöÄ Node.js API Service
  movie-api:
    build: .
    container_name: movie-api
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - movie-api-network
    environment:
      - MONGO_URI=mongodb://mongodb:27017/moviedb
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    restart: always  # Automatically restart the container on failure

  # üõ¢Ô∏è MongoDB Service
  mongodb:
    image: mongo:latest
    container_name: movie-api-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - movie-api-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ‚ö° Redis Service
  redis:
    image: redis:latest
    container_name: movie-api-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - movie-api-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  movie-api-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
